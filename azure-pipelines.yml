trigger:
- main  # Define the branch to trigger the pipeline

resources:
- repo: self

# variables:
#   dockerRegistryServiceConnection: 'Docker ACR'
#   imageRepository: 'sinclair/paul-sandford-example-app' #eg 'amiga/dan-webb-example-app'
#   containerRegistry: 'acrbjssacademy.azurecr.io' # eg 'acrbjssacademy.azurecr.io'
#   dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
#   tag: '$(Build.BuildId)'
#   azureSubscription: 'Azure RM'
#   appName: 'acr-paul-sandford'

variables:
- group: sinclair-app-variables
- name: dockerRegistryServiceConnection 
  value: 'Docker ACR'
- name:  imageRepository
  value: 'sinclair/paul-sandford-example-app'
- name: containerRegistry
  value: 'acrbjssacademy.azurecr.io'
- name: dockerfilePath
  value: '$(Build.SourcesDirectory)/Dockerfile'
- name: tag
  value: '$(Build.BuildId)'
- name: azureSubscription
  value: 'Azure RM'
- name: appName
  value: 'acr-paul-sandford'



stages:
- stage: Build
  displayName: 'Build and push Docker image'
  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
      env:
        DBTYPE: $(DBTYPE)
        DBHOST: $(DBHOST)
        DBNAME: $(DBNAME)
        DBUSER: $(DBUSER)
        DBPASSWORD: $(DBPASSWORD)
        DBSSLMODE: $(DBSSSLMODE)
- stage: Test
  displayName: 'Run tests'
  dependsOn: Build
  jobs:
    - job: Test
      displayName: 'Run tests'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - script: |
          echo "Running tests..."
          go test ./...
        displayName: 'Run tests'
- stage: Deploy
  displayName: 'Deploy to Azure Web App'
  dependsOn: Test
  jobs:
  - job: Deploy
    displayName: 'Deploy Azure Web App'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appName)
        containers: $(containerRegistry)/$(imageRepository):$(tag)
      env:
        DBTYPE: $(DBTYPE)
        DBHOST: $(DBHOST)
        DBNAME: $(DBNAME)
        DBUSER: $(DBUSER)
        DBPASSWORD: $(DBPASSWORD)
        DBSSLMODE: $(DBSSSLMODE)